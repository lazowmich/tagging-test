# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: 'Build'
    displayName: 'Build'
    jobs:
      - job: 'BuildAndPublish'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
              npm run test
            displayName: 'npm install'

          - script: |
              npm run build
            displayName: 'npm build'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
              includeRootFolder: false
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true
          - task: PublishPipelineArtifact@0
            inputs:
              artifactName: 'drop'
              targetPath: '$(Build.ArtifactStagingDirectory)/test1/$(Build.BuildId).zip'



  - stage: 'Deploy_DEV'
    displayName: 'Deploy to Dev'
    jobs:
      - deployment: 'DeployToDev'
        environment: tagtest-dev
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo deploy dev
  - stage: 'Deploy_UAT'
    displayName: 'Deploy to Uat'
    jobs:
      - deployment: 'DeployToUAT'
        environment: tagtest-uat
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo deploy uat
  - stage: 'Deploy_PROD'
    displayName: 'Deploy to Prod'
    jobs:
      - deployment: 'DeployToPROD'
        environment: tagtest-prod
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo deploy prod
      - job: 'BumpReleaseVersion'
        displayName: 'Run Semantic Release'
        dependsOn: 'DeployToPROD'
        steps:
          - checkout: self
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
              npm run release
            env:
              GIT_CREDENTIALS: $(System.AccessToken)
            displayName: "Bump release version"